<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Record has been added successfully.</value>
  </data>
  <data name="PurchaseHeaderLineToolTip" xml:space="preserve">
    <value>Purchase Header/Line</value>
  </data>
  <data name="DepartmentNameValidation" xml:space="preserve">
    <value>Department name should not be left blank!</value>
  </data>
  <data name="ConfirmDeletionAlert" xml:space="preserve">
    <value>Confirm Deletion</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Are you sure you want to delete?</value>
  </data>
  <data name="DeleteToolTip" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteSuccess" xml:space="preserve">
    <value>Record has been deleted successfully.</value>
  </data>
  <data name="EmailValid1" xml:space="preserve">
    <value>Email id should be in correct format.!</value>
  </data>
  <data name="EmailValid2" xml:space="preserve">
    <value>Email id should be 256 characters.!</value>
  </data>
  <data name="EmpFirstName1" xml:space="preserve">
    <value>First name should not be left blank!</value>
  </data>
  <data name="EmpLastName2" xml:space="preserve">
    <value>Last name should not be left blank!</value>
  </data>
  <data name="OrderReceived" xml:space="preserve">
    <value>Order recevied successfully!</value>
  </data>
  <data name="LineAmtExclTaxValid" xml:space="preserve">
    <value>Line amount exclusive tax should not be left blank!</value>
  </data>
  <data name="LineAmtInclTaxValid" xml:space="preserve">
    <value>Line amount inclusive tax should not be left blank!</value>
  </data>
  <data name="LineQuantityValid" xml:space="preserve">
    <value>Quantity should not be left blank!</value>
  </data>
  <data name="LineTaxAmtValid" xml:space="preserve">
    <value>Tax amount should not be left blank!</value>
  </data>
  <data name="LineUnitCostValid" xml:space="preserve">
    <value>Unit cost should not be left blank!</value>
  </data>
  <data name="PhoneNoValid1" xml:space="preserve">
    <value>phone number should not be left blank!</value>
  </data>
  <data name="PhoneNoValid2" xml:space="preserve">
    <value>phone number should not be alphanumeric and should be in correct format.</value>
  </data>
  <data name="EndDateValid1" xml:space="preserve">
    <value>End date must be greater than current date!</value>
  </data>
  <data name="EndDateValid2" xml:space="preserve">
    <value>End date must be greater than start date!</value>
  </data>
  <data name="StartDateValid" xml:space="preserve">
    <value>Start date must be greater than current date!</value>
  </data>
  <data name="ProductImageFormat" xml:space="preserve">
    <value>Image Files (*.jpg;*.jpeg;*.png)|*.jpg;*.jpeg;*.png</value>
  </data>
  <data name="ProductNameValid" xml:space="preserve">
    <value>Product name should not be left blank!</value>
  </data>
  <data name="ProductSalesDiscValid" xml:space="preserve">
    <value>Product Sales price should not be left blank!</value>
  </data>
  <data name="ProductUpcCodeValid1" xml:space="preserve">
    <value>UPC code should not be left blank!</value>
  </data>
  <data name="ProductUpcCodeValid2" xml:space="preserve">
    <value>UPC Code should not be alphanumeric.</value>
  </data>
  <data name="purchaseOrderOrderDate" xml:space="preserve">
    <value>Orderdate should be greater than today.!</value>
  </data>
  <data name="purchaseOrderVendorInvoiceNo1" xml:space="preserve">
    <value>Vendor Invoice No. should not be left blank!</value>
  </data>
  <data name="purchaseOrderVendorInvoiceNo2" xml:space="preserve">
    <value>Vendor Invoice No. already exist.!</value>
  </data>
  <data name="StoreZipCodeValid" xml:space="preserve">
    <value>Plase enter zip code in proper format. Format: XXXXX or XXXXXX</value>
  </data>
  <data name="SuccessAlert" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Record has been updated successfully.</value>
  </data>
  <data name="EmailValid3" xml:space="preserve">
    <value>EmailId should not be left blank!</value>
  </data>
  <data name="FaxValid" xml:space="preserve">
    <value>Fax should not be left blank!</value>
  </data>
  <data name="ProductSalePrice" xml:space="preserve">
    <value>Sales Price should not be left blank!</value>
  </data>
  <data name="ProductUoMDiscriptionValid" xml:space="preserve">
    <value>Description  should not be left blank!</value>
  </data>
  <data name="ProductUoMQtyValid" xml:space="preserve">
    <value>Unit of Measure  should not be left blank!</value>
  </data>
  <data name="ProductVendorUpcCodeValid" xml:space="preserve">
    <value>UPC Code should not be left blank!</value>
  </data>
  <data name="RoleTypeValid" xml:space="preserve">
    <value>RoleType should not be left blank!</value>
  </data>
  <data name="StoreNameValid" xml:space="preserve">
    <value>Store Name should not be left blank!</value>
  </data>
  <data name="SubCategoryNameValid" xml:space="preserve">
    <value>Sub Category should not be left blank!</value>
  </data>
  <data name="VendorNameValid" xml:space="preserve">
    <value>Vendor Name should not be left blank!</value>
  </data>
  <data name="TaxValid" xml:space="preserve">
    <value>Tax rate should not be left blank.!</value>
  </data>
  <data name="UoMCodeValid" xml:space="preserve">
    <value>Code should not be left blank!</value>
  </data>
  <data name="TaxGroupCodeValid" xml:space="preserve">
    <value>Tax Group Code should not be left blank!</value>
  </data>
  <data name="QuestionMark" xml:space="preserve">
    <value>?</value>
  </data>
  <data name="ReloPermissionConfirm" xml:space="preserve">
    <value>Confirm permission</value>
  </data>
  <data name="RolePermissionConfirmAllow" xml:space="preserve">
    <value>Would you like to allow</value>
  </data>
  <data name="RolePermissionConfirmRemove" xml:space="preserve">
    <value>Would you like to remove</value>
  </data>
  <data name="RolePermissionDelete" xml:space="preserve">
    <value>to 'DELETE' the</value>
  </data>
  <data name="RolePermissionEdit" xml:space="preserve">
    <value>to 'EDIT' the</value>
  </data>
  <data name="RolePermissionInfoAlert" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="RolePermissionInsert" xml:space="preserve">
    <value>to 'INSERT' the</value>
  </data>
  <data name="RolePermissionValid" xml:space="preserve">
    <value>Role already exists!</value>
  </data>
  <data name="RolePermissionView" xml:space="preserve">
    <value>to 'VIEW' the</value>
  </data>
  <data name="purchaseOrderVendorInvoiceNo3" xml:space="preserve">
    <value>Please enter valid invoice no.! Format : xxxxxxxxxx</value>
  </data>
  <data name="CategorySearch" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="EmployeeSearch" xml:space="preserve">
    <value>First name/Last name/Email/Phone</value>
  </data>
  <data name="ProductSearch" xml:space="preserve">
    <value>Name/UPC Code</value>
  </data>
  <data name="ProductUpcCodeValid3" xml:space="preserve">
    <value>UPC Code Should be in correct format! Format : xxxxxxxxxxxx</value>
  </data>
  <data name="PurchaseOrderSearch" xml:space="preserve">
    <value>Vendor Name/PO Number</value>
  </data>
  <data name="RoleSearch" xml:space="preserve">
    <value>Role Type</value>
  </data>
  <data name="StoreSearch" xml:space="preserve">
    <value>Name/Address</value>
  </data>
  <data name="SubCategorySearch" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="TaxGroupSearch" xml:space="preserve">
    <value>Tax Group Code</value>
  </data>
  <data name="TaxrateSearch" xml:space="preserve">
    <value>Tax Group Code</value>
  </data>
  <data name="UOMSearch" xml:space="preserve">
    <value>Unit of Measure</value>
  </data>
  <data name="VendorSearch" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="EmpPasswordValid1" xml:space="preserve">
    <value>Password Should not be left blank!</value>
  </data>
  <data name="EmpPasswordValid2" xml:space="preserve">
    <value>Password must between 8 to 12 Character</value>
  </data>
  <data name="EmpPasswordValid3" xml:space="preserve">
    <value>Password must containd one special character,one upper case,one lower case and one number</value>
  </data>
  <data name="btnChangeAdd" xml:space="preserve">
    <value>ADD</value>
  </data>
  <data name="btnChangeUpdate" xml:space="preserve">
    <value>UPDATE</value>
  </data>
  <data name="NameValidation" xml:space="preserve">
    <value>Name can not contains numeric value!</value>
  </data>
  <data name="VendorInvoiceNoValid" xml:space="preserve">
    <value>P.O. Number must be in numeric format!</value>
  </data>
  <data name="AlreadyExist" xml:space="preserve">
    <value>Record already exists!</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Something went wrong.!</value>
  </data>
  <data name="InformationAlert" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="LineTaxValid" xml:space="preserve">
    <value>Tax should not be left blank!</value>
  </data>
  <data name="OnlyNumberAllow" xml:space="preserve">
    <value>Please enter only numaric values with two decimal points!</value>
  </data>
  <data name="DropdownValidation" xml:space="preserve">
    <value>Please select specific value from drop down box </value>
  </data>
  <data name="EndDatePast" xml:space="preserve">
    <value>The end date has passed so you cant change in this!</value>
  </data>
  <data name="ZipCodeValid" xml:space="preserve">
    <value>Zip code should not be left blank!</value>
  </data>
  <data name="FaxNoValid" xml:space="preserve">
    <value>Fax number should not be alphanumeric and should be in correct format.</value>
  </data>
  <data name="NameValidation1" xml:space="preserve">
    <value>Name should not be left blank!</value>
  </data>
  <data name="PasswordValid" xml:space="preserve">
    <value>Password length must be greater than 3 letters</value>
  </data>
  <data name="PasswordValid2" xml:space="preserve">
    <value>Password can't contains space</value>
  </data>
  <data name="SalesDiscountValid1" xml:space="preserve">
    <value>Discount should not be left blank!</value>
  </data>
  <data name="SalesDiscountValid2" xml:space="preserve">
    <value>Discount should be in beteen 1 to 100.</value>
  </data>
  <data name="SalesPriceValid" xml:space="preserve">
    <value>Price should not be left blank!</value>
  </data>
  <data name="VendorInvoiceNoValid1" xml:space="preserve">
    <value>P.O. Number should not be left blank!</value>
  </data>
  <data name="LoginValidation" xml:space="preserve">
    <value>Please enter correct userid and password.</value>
  </data>
  <data name="LoginValidation1" xml:space="preserve">
    <value>Please enter emailid.!</value>
  </data>
  <data name="LoginValidation2" xml:space="preserve">
    <value>Please enter valid emailid.!</value>
  </data>
  <data name="LoginValidation3" xml:space="preserve">
    <value>Please enter Password</value>
  </data>
  <data name="TotalAmountValid" xml:space="preserve">
    <value>Amount should not be left blank!</value>
  </data>
  <data name="invoiceValidation1" xml:space="preserve">
    <value>Invoice no. should not be left blank!</value>
  </data>
  <data name="invoiceValidation2" xml:space="preserve">
    <value>Invoice no. must be in numeric format!</value>
  </data>
  <data name="PriceValidation" xml:space="preserve">
    <value>Price must be greater than 0.</value>
  </data>
  <data name="RolePermissionSuccess" xml:space="preserve">
    <value>Permissions has been updated successfully!</value>
  </data>
  <data name="StartDateValid2" xml:space="preserve">
    <value>StartDate must be greater than EndDate</value>
  </data>
  <data name="InvoiceInfoAlert" xml:space="preserve">
    <value>please enter invoice information!</value>
  </data>
  <data name="ProductDetailSearch" xml:space="preserve">
    <value>UPC Code/Product Name/Price</value>
  </data>
  <data name="ConfirmAlert" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfirmedStatus" xml:space="preserve">
    <value>Confirmed</value>
  </data>
  <data name="ConfirmInvoice" xml:space="preserve">
    <value>Are you sure you want to generate invoice?</value>
  </data>
  <data name="VendorItemCodeValid" xml:space="preserve">
    <value>Item code shuold not be left blank!</value>
  </data>
  <data name="ContactPersonValid" xml:space="preserve">
    <value>Contact Person Name should not be left black!</value>
  </data>
  <data name="TaxValid2" xml:space="preserve">
    <value>Tax should be in beteen 1 to 100</value>
  </data>
  <data name="PackValid" xml:space="preserve">
    <value>Pack must be in numeric format!</value>
  </data>
  <data name="OverwriteAmountVaild" xml:space="preserve">
    <value>Amount not valid.</value>
  </data>
  <data name="BusinessName" xml:space="preserve">
    <value>Business Name should not be left blank!</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City should not be blank!</value>
  </data>
  <data name="ResellerID" xml:space="preserve">
    <value>Reseller ID should not be left blank!</value>
  </data>
  <data name="TareWeigthValidation" xml:space="preserve">
    <value>Tare Weigth must be positive decimal value.</value>
  </data>
  <data name="FSAmountValid" xml:space="preserve">
    <value>FS Eligible Amount must be less than Price.</value>
  </data>
</root>