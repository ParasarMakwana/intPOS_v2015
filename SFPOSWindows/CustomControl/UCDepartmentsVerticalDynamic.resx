<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>